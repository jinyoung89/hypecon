---
description: 
globs: 
alwaysApply: true
---
# HYPECON 프론트엔드 개발 규칙

## 1. 디자인 기준 및 변환 공식

### 기준 해상도
- **Desktop 기준**: 1920px
- **디자인 툴**: Figma

### 변환 공식
```css
/* 폰트 크기 */
font-size: clamp(최소px, (피그마값/1920)*100vw, 최대px);

/* 요소 크기 */
width: clamp(최소px, (피그마값/1920)*100vw, 최대px);
height: clamp(최소px, (피그마값/1920)*100vw, 최대px);

/* 여백 */
padding: clamp(최소px, (피그마값/1920)*100vw, 최대px);
margin: clamp(최소px, (피그마값/1920)*100vw, 최대px);
```

## 2. 반응형 브레이크포인트 (3단계)

### 해상도 구분
- **Desktop**: 1024px 이상
- **Tablet**: 768px ~ 1023px  
- **Mobile**: 767px 이하

### 미디어 쿼리 작성 순서 (Mobile-First)
```css
/* 기본 스타일 (Mobile) */
.element {
  /* Mobile 스타일 */
  font-size: clamp(1rem, 4vw, 1.2rem);
  padding: clamp(1rem, 3vw, 1.5rem);
}

/* Tablet */
@media (min-width: 768px) {
  .element {
    /* Tablet 스타일 */
    font-size: clamp(1.2rem, 2.5vw, 1.4rem);
    padding: clamp(1.5rem, 2vw, 2rem);
  }
}

/* Desktop */
@media (min-width: 1024px) {
  .element {
    /* Desktop 스타일 */
    font-size: clamp(1.4rem, 1.5vw, 1.6rem);
    padding: clamp(2rem, 1.5vw, 2.5rem);
  }
}
```

## 3. 폰트 사용 규칙

### 기본 폰트 패밀리
```css
/* 한글 우선 텍스트 */
font-family: "Noto Sans CJK KR", sans-serif;

/* 중요 요소 (테이블, 폼 등) - 완전한 fallback */
font-family: "Noto Sans KR", "Noto Sans", "Apple SD Gothic Neo", -apple-system, BlinkMacSystemFont, sans-serif;

/* 영문 타이틀 */
font-family: 'Bebas Neue', sans-serif;

/* 영문 우선 텍스트 */
font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, sans-serif;
```

### 공용 타이틀 클래스 사용
```jsx
/* 대형 타이틀 - 반드시 공용 클래스 사용 */
<h1 className="hypecon-large-title hypecon-large-title--primary">
<h2 className="hypecon-large-title hypecon-large-title--black">
<h3 className="hypecon-large-title hypecon-large-title--white">
```

### 폰트 크기 조정 원칙
- **Desktop**: 피그마 원본 사이즈
- **Tablet**: 80-90% 크기
- **Mobile**: 70-85% 크기
- **히어로 섹션**: 축소 최소화 (가독성 우선)

## 4. 모바일 최적화 전략

### 레이아웃 변경 패턴
```css
/* Desktop - 가로 배치 */
.container {
  display: flex;
  flex-direction: row;
  gap: clamp(2rem, 3vw, 4rem);
}

/* Tablet */
@media (max-width: 1023px) {
  .container {
    gap: clamp(1.5rem, 2.5vw, 3rem);
  }
}

/* Mobile - 세로 배치 */
@media (max-width: 767px) {
  .container {
    flex-direction: column !important;
    gap: clamp(1rem, 3vw, 2rem) !important;
    align-items: center !important;
  }
}
```

### 테이블 → 카드 변환
```css
/* Desktop/Tablet - 테이블 */
.table-container .table {
  display: table;
}

.table-container .card-layout {
  display: none;
}

/* Mobile - 카드 */
@media (max-width: 767px) {
  .table-container .table {
    display: none;
  }
  
  .table-container .card-layout {
    display: block;
  }
}
```

### 컨테이너 크기 조정 (3단계)
```css
/* Desktop */
.section-container {
  max-width: clamp(1200px, 80vw, 1400px);
  padding: 0 clamp(2rem, 3vw, 3rem);
}

/* Tablet */
@media (max-width: 1023px) {
  .section-container {
    max-width: clamp(800px, 90vw, 1000px);
    padding: 0 clamp(1.5rem, 2.5vw, 2rem);
  }
}

/* Mobile */
@media (max-width: 767px) {
  .section-container {
    max-width: clamp(320px, 95vw, 500px) !important;
    padding: 0 clamp(1rem, 3vw, 1.5rem) !important;
  }
}
```

## 5. 컴포넌트별 스타일 가이드

### 히어로 섹션
```css
/* 히어로 섹션 - 고정 높이 유지 */
.hero-section {
  height: clamp(427px, (854/1920)*100vw, 854px);
  min-height: clamp(427px, (854/1920)*100vw, 854px);
}

/* 모든 해상도에서 동일한 높이 비율 유지 */
@media (max-width: 767px) {
  .hero-section {
    height: clamp(427px, (854/1920)*100vw, 854px) !important;
    min-height: clamp(427px, (854/1920)*100vw, 854px) !important;
  }
}
```

### 버튼 스타일
```css
.button {
  /* 기본 크기 */
  width: clamp(200px, (400/1920)*100vw, 400px);
  height: clamp(50px, (100/1920)*100vw, 100px);
  
  /* 최소 터치 영역 보장 */
  min-height: 44px;
  
  /* 반응형 패딩 */
  padding: clamp(0.8rem, 1.5vw, 1rem) clamp(1.5rem, 3vw, 2rem);
}

/* Mobile 버튼 최적화 */
@media (max-width: 767px) {
  .button {
    width: clamp(200px, 85vw, 350px);
    padding: clamp(0.8rem, 3vw, 1rem) clamp(1rem, 4vw, 1.5rem);
  }
}
```

### 텍스트 박스
```css
.text-box {
  /* Desktop/Tablet */
  width: clamp(600px, 60vw, 960px);
}

/* Mobile */
@media (max-width: 767px) {
  .text-box {
    width: 100% !important;
    max-width: clamp(300px, 95vw, 500px) !important;
  }
}
```

## 6. 텍스트 처리 규칙

### 줄바꿈 및 문단 처리
```css
.text-content {
  white-space: pre-line;        /* \n 문자 줄바꿈 유지 */
  word-break: keep-all;         /* 단어 단위 줄바꿈 */
  overflow-wrap: break-word;    /* 긴 단어 강제 줄바꿈 */
  word-wrap: break-word;        /* IE 호환성 */
}
```

### 다국어 텍스트 처리
```jsx
// 언어 시스템 사용 필수
{t('section.title')}

// 인라인 스타일로 텍스트 처리 적용
<p style={{
  whiteSpace: 'pre-line',
  wordBreak: 'keep-all',
  overflowWrap: 'break-word',
  wordWrap: 'break-word'
}}>
  {t('section.content')}
</p>
```

## 7. 색상 사용 규칙

### CSS 변수 사용 필수
```css
:root {
  --hypecon-main: #00E5A8;
  --hypecon-dark: #000;
  --hypecon-white: #FFF;
  --hypecon-gray: #F2F2F2;
  --hypecon-yellow: #E1F800;
}

/* 사용 예시 */
.element {
  background: var(--hypecon-main);
  color: var(--hypecon-dark);
}
```

### 하드코딩된 색상 금지
```css
/* ❌ 금지 */
color: #00E5A8;
background: #000;

/* ✅ 권장 */
color: var(--hypecon-main);
background: var(--hypecon-dark);
```

## 8. 성능 및 최적화

### CSS 우선순위
```css
/* Mobile 스타일에는 !important 사용 권장 */
@media (max-width: 767px) {
  .element {
    font-size: clamp(1rem, 3vw, 1.2rem) !important;
    padding: clamp(1rem, 3vw, 1.5rem) !important;
  }
}
```

### 이미지 최적화
```css
.responsive-image {
  max-width: 100%;
  height: auto;
  object-fit: cover;
}

/* SVG는 viewBox 기준 스케일링 */
.svg-icon {
  width: clamp(20px, 3vw, 40px);
  height: auto;
}
```

## 9. 코드 작성 가이드

### 클래스명 규칙
```css
/* 페이지-섹션-요소 구조 */
.ticket-hero-section
.ticket-hero-title
.ticket-info-content
.ticket-price-table
```

### 재사용 가능한 컴포넌트 우선
```jsx
// ❌ 페이지별 독자 스타일
<h1 className="about-main-title">

// ✅ 공용 컴포넌트 사용
<h1 className="hypecon-large-title hypecon-large-title--primary">
```

## 10. 품질 보증

### 필수 테스트 환경
- **Chrome**: 최신 버전
- **Safari**: Desktop/Mobile
- **Firefox**: 최신 버전
- **모바일**: iOS Safari, Android Chrome

### 체크리스트
- [ ] 3단계 브레이크포인트에서 레이아웃 검증
- [ ] 터치 영역 최소 44px 보장
- [ ] 텍스트 가독성 확보
- [ ] 이미지 반응형 처리
- [ ] 폰트 로딩 실패 시나리오 고려
- [ ] 색상 변수 사용
- [ ] 다국어 텍스트 처리 적용

## 11. 참고 모범 사례

**TicketPage**를 표준 구현 사례로 참고하되, **3단계 브레이크포인트로 단순화**:
- 올바른 폰트 패밀리 사용
- 효과적인 모바일 최적화
- 테이블→카드 변환 구현
- 공용 클래스 적극 활용
- 텍스트 처리 규칙 준수
- **복잡한 5단계 대신 표준 3단계 적용**

## 12. 브레이크포인트 마이그레이션 가이드

### 기존 5단계 → 3단계 변환
```css
/* 기존 (복잡함) */
@media (max-width: 900px)  /* 제거 */
@media (max-width: 768px)  /* Mobile로 통합 */
@media (max-width: 600px)  /* 제거 */
@media (max-width: 480px)  /* 제거 */

/* 새로운 (단순함) */
@media (max-width: 767px)  /* Mobile */
@media (min-width: 768px)  /* Tablet */
@media (min-width: 1024px) /* Desktop */
```

### 단계별 전환
1. **1단계**: 새 프로젝트는 3단계 적용
2. **2단계**: 기존 페이지는 점진적 리팩토링
3. **3단계**: 성능 및 유지보수성 개선